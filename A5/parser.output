Terminals unused in grammar

   ERROR


State 17 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 207 conflicts: 2 reduce/reduce
State 208 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list

    2 global_decl_list: global_decl_list global_decl
    3                 | %empty

    4 global_decl: decl_list function_decl
    5            | function_decl

    6 $@1: %empty

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE block MK_RBRACE

    8 $@2: %empty

    9 function_decl: type ID MK_LPAREN MK_RPAREN $@2 MK_LBRACE block MK_RBRACE
   10              | type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   11              | type ID MK_LPAREN MK_RPAREN MK_SEMICOLON

   12 param_list: param_list MK_COMMA param
   13           | param

   14 param: type ID
   15      | struct_type ID
   16      | type ID dim_fn
   17      | struct_type ID dim_fn

   18 dim_fn: MK_LB expr_null MK_RB dimfn1

   19 dimfn1: MK_LB expr MK_RB dimfn1
   20       | %empty

   21 expr_null: expr
   22          | %empty

   23 block: decl_list stmt_list
   24      | stmt_list
   25      | decl_list
   26      | %empty

   27 decl_list: decl_list decl
   28          | decl

   29 decl: type_decl
   30     | var_decl

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON
   32          | TYPEDEF VOID id_list MK_SEMICOLON
   33          | TYPEDEF struct_type id_list MK_SEMICOLON
   34          | struct_type MK_SEMICOLON

   35 $@3: %empty

   36 var_decl: type $@3 init_id_list MK_SEMICOLON
   37         | struct_type id_list MK_SEMICOLON
   38         | ID id_list MK_SEMICOLON

   39 type: INT
   40     | FLOAT
   41     | VOID
   42     | error

   43 struct_type: STRUCT tag

   44 tag: ID MK_LBRACE decl_list MK_RBRACE
   45    | MK_LBRACE decl_list MK_RBRACE
   46    | ID MK_LBRACE MK_RBRACE
   47    | MK_LBRACE MK_RBRACE
   48    | ID

   49 id_list: ID
   50        | id_list MK_COMMA ID
   51        | id_list MK_COMMA ID dim_decl
   52        | ID dim_decl

   53 dim_decl: MK_LB cexpr MK_RB
   54         | dim_decl MK_LB cexpr MK_RB

   55 cexpr: cexpr add_op mcexpr
   56      | mcexpr

   57 mcexpr: mcexpr mul_op cfactor
   58       | cfactor

   59 cfactor: CONST
   60        | MK_LPAREN cexpr MK_RPAREN

   61 init_id_list: init_id
   62             | init_id_list MK_COMMA init_id

   63 init_id: ID
   64        | ID dim_decl
   65        | ID OP_ASSIGN relop_expr

   66 stmt_list: stmt_list stmt
   67          | stmt

   68 stmt: MK_LBRACE block MK_RBRACE
   69     | WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   70     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   71     | IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   72     | IF MK_LPAREN relop_expr MK_RPAREN stmt
   73     | ID MK_LPAREN relop_expr_list MK_RPAREN
   74     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   75     | relop_expr_list MK_SEMICOLON
   76     | MK_SEMICOLON
   77     | RETURN MK_SEMICOLON
   78     | RETURN relop_expr MK_SEMICOLON

   79 assign_expr_list: nonempty_assign_expr_list
   80                 | %empty

   81 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   82                          | assign_expr

   83 assign_expr: ID OP_ASSIGN relop_expr
   84            | relop_expr

   85 relop_expr: relop_term
   86           | relop_expr OP_OR relop_term

   87 relop_term: relop_factor
   88           | relop_term OP_AND relop_factor

   89 relop_factor: expr
   90             | expr rel_op expr

   91 rel_op: OP_LT
   92       | OP_LE
   93       | OP_GT
   94       | OP_GE
   95       | OP_EQ
   96       | OP_NE

   97 relop_expr_list: nonempty_relop_expr_list
   98                | %empty

   99 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
  100                         | relop_expr

  101 expr: expr add_op term
  102     | term

  103 add_op: OP_PLUS
  104       | OP_MINUS

  105 term: term mul_op factor
  106     | factor

  107 mul_op: OP_TIMES
  108       | OP_DIVIDE

  109 factor: MK_LPAREN relop_expr MK_RPAREN
  110       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  111       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  112       | CONST
  113       | OP_NOT CONST
  114       | OP_MINUS CONST
  115       | ID MK_LPAREN relop_expr_list MK_RPAREN
  116       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  117       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  118       | var_ref
  119       | OP_NOT var_ref
  120       | OP_MINUS var_ref

  121 var_ref: ID
  122        | var_ref dim
  123        | var_ref struct_tail

  124 dim: MK_LB expr MK_RB

  125 struct_tail: MK_DOT ID


Terminals, with rules where they appear

$end (0) 0
error (256) 42
ID (258) 7 9 10 11 14 15 16 17 38 44 46 48 49 50 51 52 63 64 65 73
    83 115 116 117 121 125
CONST (259) 59 112 113 114
VOID (260) 32 41
INT (261) 39
FLOAT (262) 40
IF (263) 71 72
ELSE (264) 71
WHILE (265) 69
FOR (266) 70
STRUCT (267) 43
TYPEDEF (268) 31 32 33
OP_ASSIGN (269) 65 74 83
OP_OR (270) 86
OP_AND (271) 88
OP_NOT (272) 110 113 116 119
OP_EQ (273) 95
OP_NE (274) 96
OP_GT (275) 93
OP_LT (276) 91
OP_GE (277) 94
OP_LE (278) 92
OP_PLUS (279) 103
OP_MINUS (280) 104 111 114 117 120
OP_TIMES (281) 107
OP_DIVIDE (282) 108
MK_LB (283) 18 19 53 54 124
MK_RB (284) 18 19 53 54 124
MK_LPAREN (285) 7 9 10 11 60 69 70 71 72 73 109 110 111 115 116 117
MK_RPAREN (286) 7 9 10 11 60 69 70 71 72 73 109 110 111 115 116 117
MK_LBRACE (287) 7 9 44 45 46 47 68
MK_RBRACE (288) 7 9 44 45 46 47 68
MK_COMMA (289) 12 50 51 62 81 99
MK_SEMICOLON (290) 10 11 31 32 33 34 36 37 38 70 74 75 76 77 78
MK_DOT (291) 125
ERROR (292)
RETURN (293) 77 78


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
global_decl_list (41)
    on left: 2 3, on right: 1 2
global_decl (42)
    on left: 4 5, on right: 2
function_decl (43)
    on left: 7 9 10 11, on right: 4 5
$@1 (44)
    on left: 6, on right: 7
$@2 (45)
    on left: 8, on right: 9
param_list (46)
    on left: 12 13, on right: 7 10 12
param (47)
    on left: 14 15 16 17, on right: 12 13
dim_fn (48)
    on left: 18, on right: 16 17
dimfn1 (49)
    on left: 19 20, on right: 18 19
expr_null (50)
    on left: 21 22, on right: 18
block (51)
    on left: 23 24 25 26, on right: 7 9 68
decl_list (52)
    on left: 27 28, on right: 4 23 25 27 44 45
decl (53)
    on left: 29 30, on right: 27 28
type_decl (54)
    on left: 31 32 33 34, on right: 29
var_decl (55)
    on left: 36 37 38, on right: 30
$@3 (56)
    on left: 35, on right: 36
type (57)
    on left: 39 40 41 42, on right: 7 9 10 11 14 16 31 36
struct_type (58)
    on left: 43, on right: 15 17 33 34 37
tag (59)
    on left: 44 45 46 47 48, on right: 43
id_list (60)
    on left: 49 50 51 52, on right: 31 32 33 37 38 50 51
dim_decl (61)
    on left: 53 54, on right: 51 52 54 64
cexpr (62)
    on left: 55 56, on right: 53 54 55 60
mcexpr (63)
    on left: 57 58, on right: 55 56 57
cfactor (64)
    on left: 59 60, on right: 57 58
init_id_list (65)
    on left: 61 62, on right: 36 62
init_id (66)
    on left: 63 64 65, on right: 61 62
stmt_list (67)
    on left: 66 67, on right: 23 24 66
stmt (68)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 66 67 69 70
    71 72
assign_expr_list (69)
    on left: 79 80, on right: 70
nonempty_assign_expr_list (70)
    on left: 81 82, on right: 79 81
assign_expr (71)
    on left: 83 84, on right: 81 82
relop_expr (72)
    on left: 85 86, on right: 65 71 72 74 78 83 84 86 99 100 109 110
    111
relop_term (73)
    on left: 87 88, on right: 85 86 88
relop_factor (74)
    on left: 89 90, on right: 87 88
rel_op (75)
    on left: 91 92 93 94 95 96, on right: 90
relop_expr_list (76)
    on left: 97 98, on right: 69 70 73 75 115 116 117
nonempty_relop_expr_list (77)
    on left: 99 100, on right: 97 99
expr (78)
    on left: 101 102, on right: 19 21 89 90 101 124
add_op (79)
    on left: 103 104, on right: 55 101
term (80)
    on left: 105 106, on right: 101 102 105
mul_op (81)
    on left: 107 108, on right: 57 105
factor (82)
    on left: 109 110 111 112 113 114 115 116 117 118 119 120, on right:
    105 106
var_ref (83)
    on left: 121 122 123, on right: 74 118 119 120 122 123
dim (84)
    on left: 124, on right: 122
struct_tail (85)
    on left: 125, on right: 123


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (global_decl_list)

    program           go to state 1
    global_decl_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_decl_list .
    2 global_decl_list: global_decl_list . global_decl

    error    shift, and go to state 4
    ID       shift, and go to state 5
    VOID     shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    STRUCT   shift, and go to state 9
    TYPEDEF  shift, and go to state 10

    $end  reduce using rule 1 (program)

    global_decl    go to state 11
    function_decl  go to state 12
    decl_list      go to state 13
    decl           go to state 14
    type_decl      go to state 15
    var_decl       go to state 16
    type           go to state 17
    struct_type    go to state 18


State 3

    0 $accept: program $end .

    $default  accept


State 4

   42 type: error .

    $default  reduce using rule 42 (type)


State 5

   38 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 19

    id_list  go to state 20


State 6

   41 type: VOID .

    $default  reduce using rule 41 (type)


State 7

   39 type: INT .

    $default  reduce using rule 39 (type)


State 8

   40 type: FLOAT .

    $default  reduce using rule 40 (type)


State 9

   43 struct_type: STRUCT . tag

    ID         shift, and go to state 21
    MK_LBRACE  shift, and go to state 22

    tag  go to state 23


State 10

   31 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   32          | TYPEDEF . VOID id_list MK_SEMICOLON
   33          | TYPEDEF . struct_type id_list MK_SEMICOLON

    error   shift, and go to state 4
    VOID    shift, and go to state 24
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    type         go to state 25
    struct_type  go to state 26


State 11

    2 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 2 (global_decl_list)


State 12

    5 global_decl: function_decl .

    $default  reduce using rule 5 (global_decl)


State 13

    4 global_decl: decl_list . function_decl
   27 decl_list: decl_list . decl

    error    shift, and go to state 4
    ID       shift, and go to state 5
    VOID     shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    STRUCT   shift, and go to state 9
    TYPEDEF  shift, and go to state 10

    function_decl  go to state 27
    decl           go to state 28
    type_decl      go to state 15
    var_decl       go to state 16
    type           go to state 17
    struct_type    go to state 18


State 14

   28 decl_list: decl .

    $default  reduce using rule 28 (decl_list)


State 15

   29 decl: type_decl .

    $default  reduce using rule 29 (decl)


State 16

   30 decl: var_decl .

    $default  reduce using rule 30 (decl)


State 17

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN $@2 MK_LBRACE block MK_RBRACE
   10              | type . ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   11              | type . ID MK_LPAREN MK_RPAREN MK_SEMICOLON
   36 var_decl: type . $@3 init_id_list MK_SEMICOLON

    ID  shift, and go to state 29

    ID  [reduce using rule 35 ($@3)]

    $@3  go to state 30


State 18

   34 type_decl: struct_type . MK_SEMICOLON
   37 var_decl: struct_type . id_list MK_SEMICOLON

    ID            shift, and go to state 19
    MK_SEMICOLON  shift, and go to state 31

    id_list  go to state 32


State 19

   49 id_list: ID .
   52        | ID . dim_decl

    MK_LB  shift, and go to state 33

    $default  reduce using rule 49 (id_list)

    dim_decl  go to state 34


State 20

   38 var_decl: ID id_list . MK_SEMICOLON
   50 id_list: id_list . MK_COMMA ID
   51        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 35
    MK_SEMICOLON  shift, and go to state 36


State 21

   44 tag: ID . MK_LBRACE decl_list MK_RBRACE
   46    | ID . MK_LBRACE MK_RBRACE
   48    | ID .

    MK_LBRACE  shift, and go to state 37

    $default  reduce using rule 48 (tag)


State 22

   45 tag: MK_LBRACE . decl_list MK_RBRACE
   47    | MK_LBRACE . MK_RBRACE

    error      shift, and go to state 4
    ID         shift, and go to state 5
    VOID       shift, and go to state 6
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    STRUCT     shift, and go to state 9
    TYPEDEF    shift, and go to state 10
    MK_RBRACE  shift, and go to state 38

    decl_list    go to state 39
    decl         go to state 14
    type_decl    go to state 15
    var_decl     go to state 16
    type         go to state 40
    struct_type  go to state 18


State 23

   43 struct_type: STRUCT tag .

    $default  reduce using rule 43 (struct_type)


State 24

   32 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON
   41 type: VOID .

    ID  shift, and go to state 19

    ID  [reduce using rule 41 (type)]

    id_list  go to state 41


State 25

   31 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 19

    id_list  go to state 42


State 26

   33 type_decl: TYPEDEF struct_type . id_list MK_SEMICOLON

    ID  shift, and go to state 19

    id_list  go to state 43


State 27

    4 global_decl: decl_list function_decl .

    $default  reduce using rule 4 (global_decl)


State 28

   27 decl_list: decl_list decl .

    $default  reduce using rule 27 (decl_list)


State 29

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN $@2 MK_LBRACE block MK_RBRACE
   10              | type ID . MK_LPAREN param_list MK_RPAREN MK_SEMICOLON
   11              | type ID . MK_LPAREN MK_RPAREN MK_SEMICOLON

    MK_LPAREN  shift, and go to state 44


State 30

   36 var_decl: type $@3 . init_id_list MK_SEMICOLON

    ID  shift, and go to state 45

    init_id_list  go to state 46
    init_id       go to state 47


State 31

   34 type_decl: struct_type MK_SEMICOLON .

    $default  reduce using rule 34 (type_decl)


State 32

   37 var_decl: struct_type id_list . MK_SEMICOLON
   50 id_list: id_list . MK_COMMA ID
   51        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 35
    MK_SEMICOLON  shift, and go to state 48


State 33

   53 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    cexpr    go to state 51
    mcexpr   go to state 52
    cfactor  go to state 53


State 34

   52 id_list: ID dim_decl .
   54 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 54

    $default  reduce using rule 52 (id_list)


State 35

   50 id_list: id_list MK_COMMA . ID
   51        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 55


State 36

   38 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 38 (var_decl)


State 37

   44 tag: ID MK_LBRACE . decl_list MK_RBRACE
   46    | ID MK_LBRACE . MK_RBRACE

    error      shift, and go to state 4
    ID         shift, and go to state 5
    VOID       shift, and go to state 6
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    STRUCT     shift, and go to state 9
    TYPEDEF    shift, and go to state 10
    MK_RBRACE  shift, and go to state 56

    decl_list    go to state 57
    decl         go to state 14
    type_decl    go to state 15
    var_decl     go to state 16
    type         go to state 40
    struct_type  go to state 18


State 38

   47 tag: MK_LBRACE MK_RBRACE .

    $default  reduce using rule 47 (tag)


State 39

   27 decl_list: decl_list . decl
   45 tag: MK_LBRACE decl_list . MK_RBRACE

    error      shift, and go to state 4
    ID         shift, and go to state 5
    VOID       shift, and go to state 6
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    STRUCT     shift, and go to state 9
    TYPEDEF    shift, and go to state 10
    MK_RBRACE  shift, and go to state 58

    decl         go to state 28
    type_decl    go to state 15
    var_decl     go to state 16
    type         go to state 40
    struct_type  go to state 18


State 40

   36 var_decl: type . $@3 init_id_list MK_SEMICOLON

    $default  reduce using rule 35 ($@3)

    $@3  go to state 30


State 41

   32 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   50 id_list: id_list . MK_COMMA ID
   51        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 35
    MK_SEMICOLON  shift, and go to state 59


State 42

   31 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   50 id_list: id_list . MK_COMMA ID
   51        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 35
    MK_SEMICOLON  shift, and go to state 60


State 43

   33 type_decl: TYPEDEF struct_type id_list . MK_SEMICOLON
   50 id_list: id_list . MK_COMMA ID
   51        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 35
    MK_SEMICOLON  shift, and go to state 61


State 44

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN $@1 MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN $@2 MK_LBRACE block MK_RBRACE
   10              | type ID MK_LPAREN . param_list MK_RPAREN MK_SEMICOLON
   11              | type ID MK_LPAREN . MK_RPAREN MK_SEMICOLON

    error      shift, and go to state 4
    VOID       shift, and go to state 6
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    STRUCT     shift, and go to state 9
    MK_RPAREN  shift, and go to state 62

    param_list   go to state 63
    param        go to state 64
    type         go to state 65
    struct_type  go to state 66


State 45

   63 init_id: ID .
   64        | ID . dim_decl
   65        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 67
    MK_LB      shift, and go to state 33

    $default  reduce using rule 63 (init_id)

    dim_decl  go to state 68


State 46

   36 var_decl: type $@3 init_id_list . MK_SEMICOLON
   62 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 69
    MK_SEMICOLON  shift, and go to state 70


State 47

   61 init_id_list: init_id .

    $default  reduce using rule 61 (init_id_list)


State 48

   37 var_decl: struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 37 (var_decl)


State 49

   59 cfactor: CONST .

    $default  reduce using rule 59 (cfactor)


State 50

   60 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    cexpr    go to state 71
    mcexpr   go to state 52
    cfactor  go to state 53


State 51

   53 dim_decl: MK_LB cexpr . MK_RB
   55 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    MK_RB     shift, and go to state 74

    add_op  go to state 75


State 52

   56 cexpr: mcexpr .
   57 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 76
    OP_DIVIDE  shift, and go to state 77

    $default  reduce using rule 56 (cexpr)

    mul_op  go to state 78


State 53

   58 mcexpr: cfactor .

    $default  reduce using rule 58 (mcexpr)


State 54

   54 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    cexpr    go to state 79
    mcexpr   go to state 52
    cfactor  go to state 53


State 55

   50 id_list: id_list MK_COMMA ID .
   51        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 33

    $default  reduce using rule 50 (id_list)

    dim_decl  go to state 80


State 56

   46 tag: ID MK_LBRACE MK_RBRACE .

    $default  reduce using rule 46 (tag)


State 57

   27 decl_list: decl_list . decl
   44 tag: ID MK_LBRACE decl_list . MK_RBRACE

    error      shift, and go to state 4
    ID         shift, and go to state 5
    VOID       shift, and go to state 6
    INT        shift, and go to state 7
    FLOAT      shift, and go to state 8
    STRUCT     shift, and go to state 9
    TYPEDEF    shift, and go to state 10
    MK_RBRACE  shift, and go to state 81

    decl         go to state 28
    type_decl    go to state 15
    var_decl     go to state 16
    type         go to state 40
    struct_type  go to state 18


State 58

   45 tag: MK_LBRACE decl_list MK_RBRACE .

    $default  reduce using rule 45 (tag)


State 59

   32 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


State 60

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 31 (type_decl)


State 61

   33 type_decl: TYPEDEF struct_type id_list MK_SEMICOLON .

    $default  reduce using rule 33 (type_decl)


State 62

    9 function_decl: type ID MK_LPAREN MK_RPAREN . $@2 MK_LBRACE block MK_RBRACE
   11              | type ID MK_LPAREN MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 82

    $default  reduce using rule 8 ($@2)

    $@2  go to state 83


State 63

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN $@1 MK_LBRACE block MK_RBRACE
   10              | type ID MK_LPAREN param_list . MK_RPAREN MK_SEMICOLON
   12 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 84
    MK_COMMA   shift, and go to state 85


State 64

   13 param_list: param .

    $default  reduce using rule 13 (param_list)


State 65

   14 param: type . ID
   16      | type . ID dim_fn

    ID  shift, and go to state 86


State 66

   15 param: struct_type . ID
   17      | struct_type . ID dim_fn

    ID  shift, and go to state 87


State 67

   65 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 93
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 68

   54 dim_decl: dim_decl . MK_LB cexpr MK_RB
   64 init_id: ID dim_decl .

    MK_LB  shift, and go to state 54

    $default  reduce using rule 64 (init_id)


State 69

   62 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 45

    init_id  go to state 100


State 70

   36 var_decl: type $@3 init_id_list MK_SEMICOLON .

    $default  reduce using rule 36 (var_decl)


State 71

   55 cexpr: cexpr . add_op mcexpr
   60 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    MK_RPAREN  shift, and go to state 101

    add_op  go to state 75


State 72

  103 add_op: OP_PLUS .

    $default  reduce using rule 103 (add_op)


State 73

  104 add_op: OP_MINUS .

    $default  reduce using rule 104 (add_op)


State 74

   53 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 53 (dim_decl)


State 75

   55 cexpr: cexpr add_op . mcexpr

    CONST      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    mcexpr   go to state 102
    cfactor  go to state 53


State 76

  107 mul_op: OP_TIMES .

    $default  reduce using rule 107 (mul_op)


State 77

  108 mul_op: OP_DIVIDE .

    $default  reduce using rule 108 (mul_op)


State 78

   57 mcexpr: mcexpr mul_op . cfactor

    CONST      shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    cfactor  go to state 103


State 79

   54 dim_decl: dim_decl MK_LB cexpr . MK_RB
   55 cexpr: cexpr . add_op mcexpr

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    MK_RB     shift, and go to state 104

    add_op  go to state 75


State 80

   51 id_list: id_list MK_COMMA ID dim_decl .
   54 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 54

    $default  reduce using rule 51 (id_list)


State 81

   44 tag: ID MK_LBRACE decl_list MK_RBRACE .

    $default  reduce using rule 44 (tag)


State 82

   11 function_decl: type ID MK_LPAREN MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 11 (function_decl)


State 83

    9 function_decl: type ID MK_LPAREN MK_RPAREN $@2 . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 105


State 84

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . $@1 MK_LBRACE block MK_RBRACE
   10              | type ID MK_LPAREN param_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 106

    $default  reduce using rule 6 ($@1)

    $@1  go to state 107


State 85

   12 param_list: param_list MK_COMMA . param

    error   shift, and go to state 4
    VOID    shift, and go to state 6
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    STRUCT  shift, and go to state 9

    param        go to state 108
    type         go to state 65
    struct_type  go to state 66


State 86

   14 param: type ID .
   16      | type ID . dim_fn

    MK_LB  shift, and go to state 109

    $default  reduce using rule 14 (param)

    dim_fn  go to state 110


State 87

   15 param: struct_type ID .
   17      | struct_type ID . dim_fn

    MK_LB  shift, and go to state 109

    $default  reduce using rule 15 (param)

    dim_fn  go to state 111


State 88

  115 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    MK_LPAREN  shift, and go to state 112

    $default  reduce using rule 121 (var_ref)


State 89

  112 factor: CONST .

    $default  reduce using rule 112 (factor)


State 90

  110 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  113       | OP_NOT . CONST
  116       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  119       | OP_NOT . var_ref

    ID         shift, and go to state 113
    CONST      shift, and go to state 114
    MK_LPAREN  shift, and go to state 115

    var_ref  go to state 116


State 91

  111 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  114       | OP_MINUS . CONST
  117       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  120       | OP_MINUS . var_ref

    ID         shift, and go to state 117
    CONST      shift, and go to state 118
    MK_LPAREN  shift, and go to state 119

    var_ref  go to state 120


State 92

  109 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 121
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 93

   65 init_id: ID OP_ASSIGN relop_expr .
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 122

    $default  reduce using rule 65 (init_id)


State 94

   85 relop_expr: relop_term .
   88 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 123

    $default  reduce using rule 85 (relop_expr)


State 95

   87 relop_term: relop_factor .

    $default  reduce using rule 87 (relop_term)


State 96

   89 relop_factor: expr .
   90             | expr . rel_op expr
  101 expr: expr . add_op term

    OP_EQ     shift, and go to state 124
    OP_NE     shift, and go to state 125
    OP_GT     shift, and go to state 126
    OP_LT     shift, and go to state 127
    OP_GE     shift, and go to state 128
    OP_LE     shift, and go to state 129
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 89 (relop_factor)

    rel_op  go to state 130
    add_op  go to state 131


State 97

  102 expr: term .
  105 term: term . mul_op factor

    OP_TIMES   shift, and go to state 76
    OP_DIVIDE  shift, and go to state 77

    $default  reduce using rule 102 (expr)

    mul_op  go to state 132


State 98

  106 term: factor .

    $default  reduce using rule 106 (term)


State 99

  118 factor: var_ref .
  122 var_ref: var_ref . dim
  123        | var_ref . struct_tail

    MK_LB   shift, and go to state 133
    MK_DOT  shift, and go to state 134

    $default  reduce using rule 118 (factor)

    dim          go to state 135
    struct_tail  go to state 136


State 100

   62 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 62 (init_id_list)


State 101

   60 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 60 (cfactor)


State 102

   55 cexpr: cexpr add_op mcexpr .
   57 mcexpr: mcexpr . mul_op cfactor

    OP_TIMES   shift, and go to state 76
    OP_DIVIDE  shift, and go to state 77

    $default  reduce using rule 55 (cexpr)

    mul_op  go to state 78


State 103

   57 mcexpr: mcexpr mul_op cfactor .

    $default  reduce using rule 57 (mcexpr)


State 104

   54 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 54 (dim_decl)


State 105

    9 function_decl: type ID MK_LPAREN MK_RPAREN $@2 MK_LBRACE . block MK_RBRACE

    error         shift, and go to state 4
    ID            shift, and go to state 137
    CONST         shift, and go to state 89
    VOID          shift, and go to state 6
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    STRUCT        shift, and go to state 9
    TYPEDEF       shift, and go to state 10
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    block                     go to state 144
    decl_list                 go to state 145
    decl                      go to state 14
    type_decl                 go to state 15
    var_decl                  go to state 16
    type                      go to state 40
    struct_type               go to state 18
    stmt_list                 go to state 146
    stmt                      go to state 147
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 106

   10 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 10 (function_decl)


State 107

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN $@1 . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 152


State 108

   12 param_list: param_list MK_COMMA param .

    $default  reduce using rule 12 (param_list)


State 109

   18 dim_fn: MK_LB . expr_null MK_RB dimfn1

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 22 (expr_null)

    expr_null  go to state 153
    expr       go to state 154
    term       go to state 97
    factor     go to state 98
    var_ref    go to state 99


State 110

   16 param: type ID dim_fn .

    $default  reduce using rule 16 (param)


State 111

   17 param: struct_type ID dim_fn .

    $default  reduce using rule 17 (param)


State 112

  115 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 155
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 113

  116 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    MK_LPAREN  shift, and go to state 156

    $default  reduce using rule 121 (var_ref)


State 114

  113 factor: OP_NOT CONST .

    $default  reduce using rule 113 (factor)


State 115

  110 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 157
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 116

  119 factor: OP_NOT var_ref .
  122 var_ref: var_ref . dim
  123        | var_ref . struct_tail

    MK_LB   shift, and go to state 133
    MK_DOT  shift, and go to state 134

    $default  reduce using rule 119 (factor)

    dim          go to state 135
    struct_tail  go to state 136


State 117

  117 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    MK_LPAREN  shift, and go to state 158

    $default  reduce using rule 121 (var_ref)


State 118

  114 factor: OP_MINUS CONST .

    $default  reduce using rule 114 (factor)


State 119

  111 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 159
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 120

  120 factor: OP_MINUS var_ref .
  122 var_ref: var_ref . dim
  123        | var_ref . struct_tail

    MK_LB   shift, and go to state 133
    MK_DOT  shift, and go to state 134

    $default  reduce using rule 120 (factor)

    dim          go to state 135
    struct_tail  go to state 136


State 121

   86 relop_expr: relop_expr . OP_OR relop_term
  109 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 122
    MK_RPAREN  shift, and go to state 160


State 122

   86 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_term    go to state 161
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 123

   88 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_factor  go to state 162
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 124

   95 rel_op: OP_EQ .

    $default  reduce using rule 95 (rel_op)


State 125

   96 rel_op: OP_NE .

    $default  reduce using rule 96 (rel_op)


State 126

   93 rel_op: OP_GT .

    $default  reduce using rule 93 (rel_op)


State 127

   91 rel_op: OP_LT .

    $default  reduce using rule 91 (rel_op)


State 128

   94 rel_op: OP_GE .

    $default  reduce using rule 94 (rel_op)


State 129

   92 rel_op: OP_LE .

    $default  reduce using rule 92 (rel_op)


State 130

   90 relop_factor: expr rel_op . expr

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    expr     go to state 163
    term     go to state 97
    factor   go to state 98
    var_ref  go to state 99


State 131

  101 expr: expr add_op . term

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    term     go to state 164
    factor   go to state 98
    var_ref  go to state 99


State 132

  105 term: term mul_op . factor

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    factor   go to state 165
    var_ref  go to state 99


State 133

  124 dim: MK_LB . expr MK_RB

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    expr     go to state 166
    term     go to state 97
    factor   go to state 98
    var_ref  go to state 99


State 134

  125 struct_tail: MK_DOT . ID

    ID  shift, and go to state 167


State 135

  122 var_ref: var_ref dim .

    $default  reduce using rule 122 (var_ref)


State 136

  123 var_ref: var_ref struct_tail .

    $default  reduce using rule 123 (var_ref)


State 137

   38 var_decl: ID . id_list MK_SEMICOLON
   73 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN
  115 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    ID         shift, and go to state 19
    MK_LPAREN  shift, and go to state 168

    $default  reduce using rule 121 (var_ref)

    id_list  go to state 20


State 138

   71 stmt: IF . MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   72     | IF . MK_LPAREN relop_expr MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 169


State 139

   69 stmt: WHILE . MK_LPAREN relop_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 170


State 140

   70 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 171


State 141

   68 stmt: MK_LBRACE . block MK_RBRACE

    error         shift, and go to state 4
    ID            shift, and go to state 137
    CONST         shift, and go to state 89
    VOID          shift, and go to state 6
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    STRUCT        shift, and go to state 9
    TYPEDEF       shift, and go to state 10
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    block                     go to state 172
    decl_list                 go to state 145
    decl                      go to state 14
    type_decl                 go to state 15
    var_decl                  go to state 16
    type                      go to state 40
    struct_type               go to state 18
    stmt_list                 go to state 146
    stmt                      go to state 147
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 142

   76 stmt: MK_SEMICOLON .

    $default  reduce using rule 76 (stmt)


State 143

   77 stmt: RETURN . MK_SEMICOLON
   78     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 88
    CONST         shift, and go to state 89
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_SEMICOLON  shift, and go to state 173

    relop_expr    go to state 174
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 144

    9 function_decl: type ID MK_LPAREN MK_RPAREN $@2 MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 175


State 145

   23 block: decl_list . stmt_list
   25      | decl_list .
   27 decl_list: decl_list . decl

    error         shift, and go to state 4
    ID            shift, and go to state 137
    CONST         shift, and go to state 89
    VOID          shift, and go to state 6
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    STRUCT        shift, and go to state 9
    TYPEDEF       shift, and go to state 10
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_RBRACE     reduce using rule 25 (block)
    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    decl                      go to state 28
    type_decl                 go to state 15
    var_decl                  go to state 16
    type                      go to state 40
    struct_type               go to state 18
    stmt_list                 go to state 176
    stmt                      go to state 147
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 146

   24 block: stmt_list .
   66 stmt_list: stmt_list . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]
    $default      reduce using rule 24 (block)

    stmt                      go to state 178
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 147

   67 stmt_list: stmt .

    $default  reduce using rule 67 (stmt_list)


State 148

   86 relop_expr: relop_expr . OP_OR relop_term
  100 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 122

    $default  reduce using rule 100 (nonempty_relop_expr_list)


State 149

   75 stmt: relop_expr_list . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 179


State 150

   97 relop_expr_list: nonempty_relop_expr_list .
   99 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 180

    $default  reduce using rule 97 (relop_expr_list)


State 151

   74 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON
  118 factor: var_ref .
  122 var_ref: var_ref . dim
  123        | var_ref . struct_tail

    OP_ASSIGN  shift, and go to state 181
    MK_LB      shift, and go to state 133
    MK_DOT     shift, and go to state 134

    $default  reduce using rule 118 (factor)

    dim          go to state 135
    struct_tail  go to state 136


State 152

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE . block MK_RBRACE

    error         shift, and go to state 4
    ID            shift, and go to state 137
    CONST         shift, and go to state 89
    VOID          shift, and go to state 6
    INT           shift, and go to state 7
    FLOAT         shift, and go to state 8
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    STRUCT        shift, and go to state 9
    TYPEDEF       shift, and go to state 10
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_RBRACE     reduce using rule 26 (block)
    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    block                     go to state 182
    decl_list                 go to state 145
    decl                      go to state 14
    type_decl                 go to state 15
    var_decl                  go to state 16
    type                      go to state 40
    struct_type               go to state 18
    stmt_list                 go to state 146
    stmt                      go to state 147
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 153

   18 dim_fn: MK_LB expr_null . MK_RB dimfn1

    MK_RB  shift, and go to state 183


State 154

   21 expr_null: expr .
  101 expr: expr . add_op term

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 21 (expr_null)

    add_op  go to state 131


State 155

  115 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 184


State 156

  116 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 157

   86 relop_expr: relop_expr . OP_OR relop_term
  110 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 122
    MK_RPAREN  shift, and go to state 186


State 158

  117 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 187
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 159

   86 relop_expr: relop_expr . OP_OR relop_term
  111 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 122
    MK_RPAREN  shift, and go to state 188


State 160

  109 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 109 (factor)


State 161

   86 relop_expr: relop_expr OP_OR relop_term .
   88 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 123

    $default  reduce using rule 86 (relop_expr)


State 162

   88 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 88 (relop_term)


State 163

   90 relop_factor: expr rel_op expr .
  101 expr: expr . add_op term

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 90 (relop_factor)

    add_op  go to state 131


State 164

  101 expr: expr add_op term .
  105 term: term . mul_op factor

    OP_TIMES   shift, and go to state 76
    OP_DIVIDE  shift, and go to state 77

    $default  reduce using rule 101 (expr)

    mul_op  go to state 132


State 165

  105 term: term mul_op factor .

    $default  reduce using rule 105 (term)


State 166

  101 expr: expr . add_op term
  124 dim: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    MK_RB     shift, and go to state 189

    add_op  go to state 131


State 167

  125 struct_tail: MK_DOT ID .

    $default  reduce using rule 125 (struct_tail)


State 168

   73 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN
  115 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 190
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 169

   71 stmt: IF MK_LPAREN . relop_expr MK_RPAREN stmt ELSE stmt
   72     | IF MK_LPAREN . relop_expr MK_RPAREN stmt

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 191
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 170

   69 stmt: WHILE MK_LPAREN . relop_expr_list MK_RPAREN stmt

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 192
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 171

   70 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 193
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 80 (assign_expr_list)

    assign_expr_list           go to state 194
    nonempty_assign_expr_list  go to state 195
    assign_expr                go to state 196
    relop_expr                 go to state 197
    relop_term                 go to state 94
    relop_factor               go to state 95
    expr                       go to state 96
    term                       go to state 97
    factor                     go to state 98
    var_ref                    go to state 99


State 172

   68 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 198


State 173

   77 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 77 (stmt)


State 174

   78 stmt: RETURN relop_expr . MK_SEMICOLON
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 122
    MK_SEMICOLON  shift, and go to state 199


State 175

    9 function_decl: type ID MK_LPAREN MK_RPAREN $@2 MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 176

   23 block: decl_list stmt_list .
   66 stmt_list: stmt_list . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]
    $default      reduce using rule 23 (block)

    stmt                      go to state 178
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 177

   73 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN
  115 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    MK_LPAREN  shift, and go to state 168

    $default  reduce using rule 121 (var_ref)


State 178

   66 stmt_list: stmt_list stmt .

    $default  reduce using rule 66 (stmt_list)


State 179

   75 stmt: relop_expr_list MK_SEMICOLON .

    $default  reduce using rule 75 (stmt)


State 180

   99 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 200
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 181

   74 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 201
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 182

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 202


State 183

   18 dim_fn: MK_LB expr_null MK_RB . dimfn1

    MK_LB  shift, and go to state 203

    $default  reduce using rule 20 (dimfn1)

    dimfn1  go to state 204


State 184

  115 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 115 (factor)


State 185

  116 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 205


State 186

  110 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 110 (factor)


State 187

  117 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 206


State 188

  111 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 111 (factor)


State 189

  124 dim: MK_LB expr MK_RB .

    $default  reduce using rule 124 (dim)


State 190

   73 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN
  115 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 207


State 191

   71 stmt: IF MK_LPAREN relop_expr . MK_RPAREN stmt ELSE stmt
   72     | IF MK_LPAREN relop_expr . MK_RPAREN stmt
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR      shift, and go to state 122
    MK_RPAREN  shift, and go to state 208


State 192

   69 stmt: WHILE MK_LPAREN relop_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 209


State 193

   83 assign_expr: ID . OP_ASSIGN relop_expr
  115 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  121 var_ref: ID .

    OP_ASSIGN  shift, and go to state 210
    MK_LPAREN  shift, and go to state 112

    $default  reduce using rule 121 (var_ref)


State 194

   70 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 211


State 195

   79 assign_expr_list: nonempty_assign_expr_list .
   81 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 212

    $default  reduce using rule 79 (assign_expr_list)


State 196

   82 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 82 (nonempty_assign_expr_list)


State 197

   84 assign_expr: relop_expr .
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 122

    $default  reduce using rule 84 (assign_expr)


State 198

   68 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 68 (stmt)


State 199

   78 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 78 (stmt)


State 200

   86 relop_expr: relop_expr . OP_OR relop_term
   99 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 122

    $default  reduce using rule 99 (nonempty_relop_expr_list)


State 201

   74 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 122
    MK_SEMICOLON  shift, and go to state 213


State 202

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN $@1 MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 203

   19 dimfn1: MK_LB . expr MK_RB dimfn1

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    expr     go to state 214
    term     go to state 97
    factor   go to state 98
    var_ref  go to state 99


State 204

   18 dim_fn: MK_LB expr_null MK_RB dimfn1 .

    $default  reduce using rule 18 (dim_fn)


State 205

  116 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 116 (factor)


State 206

  117 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 117 (factor)


State 207

   73 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN .
  115 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    OP_OR         reduce using rule 115 (factor)
    OP_AND        reduce using rule 115 (factor)
    OP_EQ         reduce using rule 115 (factor)
    OP_NE         reduce using rule 115 (factor)
    OP_GT         reduce using rule 115 (factor)
    OP_LT         reduce using rule 115 (factor)
    OP_GE         reduce using rule 115 (factor)
    OP_LE         reduce using rule 115 (factor)
    OP_PLUS       reduce using rule 115 (factor)
    OP_MINUS      reduce using rule 73 (stmt)
    OP_MINUS      [reduce using rule 115 (factor)]
    OP_TIMES      reduce using rule 115 (factor)
    OP_DIVIDE     reduce using rule 115 (factor)
    MK_COMMA      reduce using rule 115 (factor)
    MK_SEMICOLON  reduce using rule 73 (stmt)
    MK_SEMICOLON  [reduce using rule 115 (factor)]
    $default      reduce using rule 73 (stmt)


State 208

   71 stmt: IF MK_LPAREN relop_expr MK_RPAREN . stmt ELSE stmt
   72     | IF MK_LPAREN relop_expr MK_RPAREN . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    stmt                      go to state 215
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 209

   69 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    stmt                      go to state 216
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 210

   83 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    relop_expr    go to state 217
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 211

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 98 (relop_expr_list)

    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 218
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 99


State 212

   81 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 193
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    assign_expr   go to state 219
    relop_expr    go to state 197
    relop_term    go to state 94
    relop_factor  go to state 95
    expr          go to state 96
    term          go to state 97
    factor        go to state 98
    var_ref       go to state 99


State 213

   74 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 74 (stmt)


State 214

   19 dimfn1: MK_LB expr . MK_RB dimfn1
  101 expr: expr . add_op term

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    MK_RB     shift, and go to state 220

    add_op  go to state 131


State 215

   71 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt . ELSE stmt
   72     | IF MK_LPAREN relop_expr MK_RPAREN stmt .

    ELSE  shift, and go to state 221

    ELSE      [reduce using rule 72 (stmt)]
    $default  reduce using rule 72 (stmt)


State 216

   69 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt .

    $default  reduce using rule 69 (stmt)


State 217

   83 assign_expr: ID OP_ASSIGN relop_expr .
   86 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 122

    $default  reduce using rule 83 (assign_expr)


State 218

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 222


State 219

   81 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 81 (nonempty_assign_expr_list)


State 220

   19 dimfn1: MK_LB expr MK_RB . dimfn1

    MK_LB  shift, and go to state 203

    $default  reduce using rule 20 (dimfn1)

    dimfn1  go to state 223


State 221

   71 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    stmt                      go to state 224
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 222

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 193
    CONST      shift, and go to state 89
    OP_NOT     shift, and go to state 90
    OP_MINUS   shift, and go to state 91
    MK_LPAREN  shift, and go to state 92

    $default  reduce using rule 80 (assign_expr_list)

    assign_expr_list           go to state 225
    nonempty_assign_expr_list  go to state 195
    assign_expr                go to state 196
    relop_expr                 go to state 197
    relop_term                 go to state 94
    relop_factor               go to state 95
    expr                       go to state 96
    term                       go to state 97
    factor                     go to state 98
    var_ref                    go to state 99


State 223

   19 dimfn1: MK_LB expr MK_RB dimfn1 .

    $default  reduce using rule 19 (dimfn1)


State 224

   71 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 71 (stmt)


State 225

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 226


State 226

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 177
    CONST         shift, and go to state 89
    IF            shift, and go to state 138
    WHILE         shift, and go to state 139
    FOR           shift, and go to state 140
    OP_NOT        shift, and go to state 90
    OP_MINUS      shift, and go to state 91
    MK_LPAREN     shift, and go to state 92
    MK_LBRACE     shift, and go to state 141
    MK_SEMICOLON  shift, and go to state 142
    RETURN        shift, and go to state 143

    MK_SEMICOLON  [reduce using rule 98 (relop_expr_list)]

    stmt                      go to state 227
    relop_expr                go to state 148
    relop_term                go to state 94
    relop_factor              go to state 95
    relop_expr_list           go to state 149
    nonempty_relop_expr_list  go to state 150
    expr                      go to state 96
    term                      go to state 97
    factor                    go to state 98
    var_ref                   go to state 151


State 227

   70 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 70 (stmt)
